B. Studying Algorithms
USACO Guide Problem Submission

Code:
//#include <bits/stdc++.h>
//#include <ext/pb_ds/assoc_container.hpp>
//using namespace __gnu_pbds;
#include <iostream>
#include <fstream>
#include <algorithm>
#include <vector>
#include <stack>
#include <tuple>
#include <queue>
#include <math.h>
#include <set>
#include <map>
#include <string>
#include <tuple>
#include <numeric>
#include <climits>
#include <bitset>
#include <cstdlib>
#include <cstdio>

using namespace std;

//change the long long to int if you need to save memory/time really badly
typedef long long ll;

//Comment this define when working on interactive problems
#define endl "\n"

const ll MAXN = 2e5 + 5;
const ll ZER = 0;
const ll ONE = 1;
const ll INF = 1e9;
const ll MOD = 998244353;

//Greedy algorithm: Prioritize algorithms that take less time to learn
void solve() {
    ll n, x;
    cin >> n >> x;
    
    ll a[n];
    for (ll i = 0; i <n; i++) {
        cin >> a[i];
    }
    
    sort(a, a+n);
    
    ll sum = 0;
    ll i;
    for (i = 1; i <= n; i++) {
        sum += a[i-1];
        if (sum > x) {
            break;
        }
    }
    
    if (sum <= x) {
        cout << n << endl;
    } else {
        cout << i-1 << endl;
    }
     
 
    return;
}


int main()
{
    //Fast IO
    ios::sync_with_stdio(false);
    cin.tie(nullptr);
    
    /*
    freopen("convention2.in", "r", stdin);
    freopen("convention2.out", "w", stdout);
    */
    
    ll t = 1;
    //cin >> t;
    
    while (t--) {
        solve();
    }
}
