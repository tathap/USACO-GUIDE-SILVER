USACO 2015 December Contest, Silver
Problem 2. High Card Wins

//#include <bits/stdc++.h>
//#include <ext/pb_ds/assoc_container.hpp>
//using namespace __gnu_pbds;
#include <iostream>
#include <fstream>
#include <algorithm>
#include <vector>
#include <stack>
#include <tuple>
#include <queue>
#include <math.h>
#include <set>
#include <map>
#include <string>
#include <tuple>
#include <numeric>
#include <climits>
#include <bitset>
#include <cstdlib>
#include <cstdio>

using namespace std;

//change the long long to int if you need to save memory/time really badly
typedef long long ll;

//Comment this define when working on interactive problems
#define endl "\n"

const ll MAXN = 2e5 + 5;
const ll ZER = 0;
const ll ONE = 1;
const ll INF = 1e9;
const ll MOD = 998244353;

void solve() {
    ll n;
    cin >> n;
    
    ll e[n];
    for (ll i = 0; i < n; i++) {
        cin >> e[i];
    }
    
    //mark which of the 2n cards have been used
    vector<bool> used(2*n, false);
    for (ll i = 0; i < n; i++) {
        used[e[i]-1] = true;
    }
    
    //will store a set of all bessie's cards
    set<ll> b;
    for (ll i = 0; i < 2*n; i++) {
        if (!used[i]) {
            b.insert(i+1);
        }
    }
    
    //for each of elsie's cards, find the smallest card that belongs to bessie that's bigger than it.
    ll ans = 0;
    for (ll i = 0; i < n; i++) {
        auto it = b.upper_bound(e[i]);
        if (it != b.end()) {
            ans++;
            b.erase(it);
        }
    }
    
    cout << ans << endl;
    
    
    return;
}


int main()
{
    //Fast IO
    ios::sync_with_stdio(false);
    cin.tie(nullptr);
    
    freopen("highcard.in", "r", stdin);
    freopen("highcard.out", "w", stdout);
    
    
    ll t = 1;
    //cin >> t;
    
    while (t--) {
        solve();
    }
}

