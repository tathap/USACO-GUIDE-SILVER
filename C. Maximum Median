C. Maximum Median
Codeforces Round #577 (Div. 2)

Code:
//#include <bits/stdc++.h>
//#include <ext/pb_ds/assoc_container.hpp>
//using namespace __gnu_pbds;
#include <iostream>
#include <fstream>
#include <algorithm>
#include <vector>
#include <stack>
#include <tuple>
#include <queue>
#include <math.h>
#include <set>
#include <map>
#include <string>
#include <tuple>
#include <numeric>
#include <climits>
#include <bitset>
#include <cstdlib>
#include <cstdio>

using namespace std;

//change the long long to int if you need to save memory/time really badly
typedef long long ll;

//Comment this define when working on interactive problems
#define endl "\n"

const ll MAXN = 2e5 + 5;
const ll ZER = 0;
const ll ONE = 1;
const ll INF = 1e9;
const ll MOD = 998244353;

void solve() {
    ll n, k;
    cin >> n >> k;
    
    vector<ll> a(n);
    for (ll i = 0; i < n; i++) {
        cin >> a[i];
    }
    sort(a.begin(), a.end());
    
    //Binary Search on the largest value of the median
    ll lo = a[n/2]; ll hi = 1e14;
    lo--;
    while (lo < hi) {
        ll mid = lo + (hi - lo + 1) / 2;

        vector<ll> b = a;
        ll cnt = k;
        
        //Iterate over all the elements starting from the middle and make them at least as big as the goal
        for (ll i = n/2; i < n; i++) {
            if (b[i] < mid) {
                cnt -= (mid - b[i]);
            }
        }
        
        //If it is possible to construct the current median use it
        if (cnt >= 0) {
            lo = mid;
        } else {
            hi = mid-1;
        }
    }
    
    cout << lo << endl;
    return;
}


int main()
{
    //Fast IO
    ios::sync_with_stdio(false);
    cin.tie(nullptr);

    /*
    freopen("helpcross.in", "r", stdin);
    freopen("helpcross.out", "w", stdout);
    */

    ll t = 1;
    //cin >> t;

    while (t--) {
        solve();
    }
}
