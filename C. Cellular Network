C. Cellular Network 
Educational Codeforces Round 15

Code:
//#include <bits/stdc++.h>
//#include <ext/pb_ds/assoc_container.hpp>
//using namespace __gnu_pbds;
#include <iostream>
#include <fstream>
#include <algorithm>
#include <vector>
#include <stack>
#include <queue>
#include <math.h>
#include <set>
#include <map>
#include <string>
#include <tuple>
#include <numeric>
#include <climits>
#include <bitset>
#include <cstdlib>
#include <cstdio>

using namespace std;

//change the long long to int if you need to save memory/time really badly
typedef long long ll;

//Comment this define when working on interactive problems
#define endl "\n"

const ll MAXN = 2e5 + 5;
const ll ZER = 0;
const ll ONE = 1;
const ll INF = 1e9;
const ll MOD = 998244353;

//Binary search on the smallest r value and then use 2-pointers to check if it works
void solve() {
    ll n, m;
    cin >> n >> m;
    
    ll a[n];
    for (ll i = 0; i < n; i++) {
        cin >> a[i];
    }
    
    ll b[m];
    for (ll i = 0; i < m; i++) {
        cin >> b[i];
    }
    
    ll lo = 0, hi = 3e9;
    hi++;
    
    while (lo < hi) {
        ll mid = lo + (hi - lo)/2;
        ll i = 0, j = 0;
        while (i < n && j < m) {
            if (abs(a[i] - b[j]) <= mid) {
                i++;
            } else {
                j++;
            }
        }
        
        if (i == n) {
            hi = mid;
        } else {
            lo = mid+1;
        }
    }
    
    cout << lo << endl;
    
    return;
}
 
int main()
{
    //Fast IO
    ios::sync_with_stdio(false);
    cin.tie(nullptr);
    
    /*
    freopen("pairup.in", "r", stdin);
    freopen("pairup.out", "w", stdout);
    */
    
    ll t = 1;
    //cin >> t;
    
    while (t--) {
        solve();
    }
}

